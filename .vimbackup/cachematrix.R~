# This file containes functions which aid in repeatedly calculating the inverse
# of an invertable matrix by caching the result.


##
# For a matrix the following function creates a list containing functions that
# let's one set the matrix, get the matrix, retrieve the inverse of the matrix
# or set the inverse of the matrix.
makeCacheMatrix <- function(x = matrix()) {
        inv <- NULL
        set <- function(y) {
                x <<- y
                inv <<- NULL
        }
        get <- function() x
        setinv <- function(inverse) inv <<- inverse
        getinv <- function() inv
        list(set = set, get = get,
             setinv = setinv,
             getinv = getinv)
}


##
# This function retrieves the inverse for the matrix if it is already cached.
# If not the inverse is calculated and stored for future use.
cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
        inv <- x$getinv()
        if(!is.null(inv)) {
                return(inv)
        }
        data <- x$get()
        inv <- solve(data, ...)
        x$setinv(inv)
        inv
}
